# -*- coding: utf-8 -*-
"""MachineLearningIncomeCensus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u_ZuVu8GOqFdVgYt_Ok7DF6bnwzNX4AX
"""

import pandas as pd
from google.colab import files
from sklearn.model_selection import train_test_split
from sklearn import tree

uploaded = files.upload()

for fn in uploaded.keys():
  print('Arquivo "{name}" com o tamanho de {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))
  
census = pd.read_csv("census.csv")

census = census[(census.astype(str) != ' ?').all(axis=1)]
census.head()

target = census['income']
target.head()

data = pd.get_dummies(census, columns=['workclass', 'education', 'marital.status', 'occupation', 'relationship', 'race', 'sex', 'native.country']).drop('income', axis=1)
data.head()

X_train, X_test, y_train, y_test = train_test_split(data, target, test_size=0.25)

clf = tree.DecisionTreeClassifier(criterion='entropy', max_depth=3)
clf = clf.fit(X_train, y_train)
predictions = clf.predict(X_test)

print("\nMatriz de confusão detalhada:\n",
pd.crosstab(y_test, predictions, rownames=['Real'], colnames=
['Predito'],
margins=True, margins_name='Todos'))

import sklearn.metrics as metrics
print("Relatório sobre a qualidade:\n")
print(metrics.classification_report(y_test, predictions, target_names=['<=50K', '>50K']))

dot_data = tree.export_graphviz(clf, out_file=None)
graph = graphviz.Source(dot_data)
graph.render("iris")
dot_data = tree.export_graphviz(clf, out_file=None, feature_names=data.columns, class_names=['Menos que 50 mil', 'Mais que 50 mil'], filled=True, rounded=True, special_characters=True)
graph = graphviz.Source(dot_data, format="png")
graph

